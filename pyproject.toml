[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "deep learning template"
version = "0.0.1"
description = 'Deep learning template for quick experiments'
readme = "readme.md"
requires-python = ">=3.7"
license = "MIT"
keywords = ["deep learning", "pytorch", "template"]
authors = [
  { name = "mikedev", email = "mik3dev@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = []


[tool.hatch.envs.default]
python = "3.10"
dependencies = [
  "torch==2.0.1",
  "torchvision",
  "pytorch-lightning",
  "torchmetrics",
  "torchsummary",
  "path",
  "numpy",
  "hydra-core",
  "tensorboard",
  "seaborn",
  "matplotlib",
  "pytest",
]

[tool.hatch.envs.default.scripts]
train = "python train.py accelerator=gpu devices=1"
test = "pytest {args:tests}"
compress-runs = "tar cfz saved_models.tar.gz saved_models/"
run-tensorboard = "tensorboard --logdir=saved_models/"
clean-empty-runs = """python -c '\nfrom path import Path\nfor run in Path(\"saved_models\").dirs():\n\
         if not run.joinpath(\"best.ckpt\").exists():\n        print(f\"Removing\
       {run}\")\n        run.rmtree()'\n"""


[tool.hatch.envs.cpu]
python = "3.10"
dependencies = [
  "torch==2.0.1",
  "torchvision",
  "pytorch-lightning",
  "torchmetrics",
  "torchsummary",
  "path",
  "numpy",
  "hydra-core",
  "tensorboard",
  "seaborn",
  "matplotlib",
  "einops",
  "pytest",
]

[tool.hatch.envs.cpu.env-vars]
PIP_EXTRA_INDEX_URL = "https://download.pytorch.org/whl/cpu"
PIP_VERBOSE = "1"


[tool.hatch.envs.cpu.scripts]
train = "python train.py accelerator=cpu devices=1"

